const gulp = require('gulp');
const plumber = require('gulp-plumber');
const rename = require('gulp-rename');
{{#css-autoprefix}}
const autoprefixer = require('gulp-autoprefixer');
{{/css-autoprefix}}
{{#js-es6}}
const babel = require('gulp-babel');
{{/js-es6}}
{{#js-coffeescript}}
const coffee = require('gulp-coffee');
{{/js-coffeescript}}
{{#js-concatenate}}
const concat = require('gulp-concat');
{{/js-concatenate}}
{{#es-lint}}
const eslint = require('gulp-eslint');
{{/es-lint}}
{{#js-minimize}}
const uglify = require('gulp-uglify');
{{/js-minimize}}
{{#images-optimize}}
const imagemin = require('gulp-imagemin'),
cache = require('gulp-cache');
{{/images-optimize}}
{{#css-minimize}}
const minifycss = require('gulp-minify-css');
{{/css-minimize}}
{{#css-precompile}}
    {{#gulp-less}}
const less = require('gulp-less');
    {{/gulp-less}}
    {{#gulp-sass}}
const sass = require('gulp-sass');
    {{/gulp-sass}}
    {{#gulp-stylus}}
const stylus = require('gulp-stylus');
    {{/gulp-stylus}}
{{/css-precompile}}
{{#browser-sync}}
const browserSync = require('browser-sync').create();

// BrowserSync
    function browserSync(done) {
        browserSync.init({
            server: {
                baseDir: "./"
            }
        });
        done();
    }

// BrowserSync Reload
function bsReload(done) {
    browserSync.reload();
    done();
}
{{/browser-sync}}

{{#images-optimize}}
// Optimize Images
function images() {
    'use strict';
    return gulp.src('{{{images-source}}}/**/*')
        .pipe(cache(imagemin([
            imagemin.gifsicle({
                interlaced: true
            }),
            imagemin.jpegtran({
                progressive: true
            }),
            imagemin.optipng({
                optimizationLevel: 5
            }),
            imagemin.svgo({
                plugins: [
                    {
                        removeViewBox: true
                    }
		        ]
            })
        ])))
        .pipe(gulp.dest('{{{images-destination}}}/'));
    }
{{/images-optimize}}

{{#css}}
// Compile CSS
function styles() {
    'use strict';
    {{#gulp-sass}}
    return gulp.src(['{{{css-source}}}/**/*.scss'])
        .pipe(plumber())
        .pipe(sass())
    {{/gulp-sass}}
    {{#gulp-less}}
    return gulp.src(['{{{css-source}}}/**/*.less'])
        .pipe(plumber())
        .pipe(less())
    {{/gulp-less}}
    {{#gulp-stylus}}
    return gulp.src(['{{{css-source}}}/**/*.styl'])
        .pipe(plumber())
        .pipe(stylus())
    {{/gulp-stylus}}
    {{#css-autoprefix}}
        .pipe(autoprefixer())
    {{/css-autoprefix}}
    {{#css-minimize}}
        .pipe(gulp.dest('{{{css-destination}}}/'))
        .pipe(rename({
            suffix: '.min'
        }))
        .pipe(minifycss())
    {{/css-minimize}}
        .pipe(gulp.dest('{{{css-destination}}}/'))
    {{#browser-sync}}
        .pipe(browserSync.stream());
    {{/browser-sync}}
    }
{{/css}}

{{#js}}
// Concatenate, minify, and lint scripts
function scripts() {
    'use strict';
    {{#js-coffeescript}}
    return gulp.src('{{{js-source}}}/**/*.coffee')
        .pipe(plumber())
        .pipe(coffee({bare: true})
    {{/js-coffeescript}}
    {{^js-coffeescript}}
    return gulp.src('{{{js-source}}}/**/*.js')
        .pipe(plumber())
    {{#es-lint}}
        .pipe(eslint())
        .pipe(eslint.format())
        .pipe(eslint.failAfterError());
    {{/es-lint}}
    {{/js-coffeescript}}
        .pipe(gulp.dest('dist/scripts/'))
    {{#js-concatenate}}
        .pipe(concat('main.js'))
    {{/js-concatenate}}
    {{#js-minimize}}
        .pipe(gulp.dest('{{{js-destination}}}/'))
        .pipe(rename({
            suffix: '.min'
        }))
        .pipe(uglify())
    {{/js-minimize}}
        .pipe(gulp.dest('{{{js-destination}}}/'))
    {{#browser-sync}}
        .pipe(browserSync.stream());
    {{/browser-sync}}
    }
{{/js}}

// Watch Files
function watchFiles() {
    'use strict';
{{#css}}
    {{#gulp-less}}
    gulp.watch("{{{css-source}}}/**/*.less", styles);
    {{/gulp-less}}
    {{#gulp-sass}}
    gulp.watch("{{{css-source}}}/**/*.scss", styles);
    {{/gulp-sass}}
    {{#gulp-stylus}}
    gulp.watch("{{{css-source}}}/**/*.styl", styles);
    {{/gulp-stylus}}
{{/css}}
{{#js}}
    {{#js-coffeescript}}
    gulp.watch('{{{js-source}}}/**/*.coffee', scripts);
    {{/js-coffeescript}}
    {{^js-coffeescript}}
    gulp.watch('{{{js-source}}}/**/*.js', scripts);
    {{/js-coffeescript}}
{{/js}}
{{#browser-sync}}
    gulp.watch('*.html', bsReload);
{{/browser-sync}}
{{#images-optimize}}
    gulp.watch("src/images/**/*", images);
{{/images-optimize}}
}

// Group complex tasks
const build = gulp.parallel(styles, {{#images-optimize}}images,{{/images-optimize}} scripts);
{{#browser-sync}}
const watch = gulp.parallel(watchFiles, browserSync);
{{/browser-sync}}

// Export tasks
{{#images-optimize}}
exports.images = images;
{{/images-optimize}}
exports.styles = styles;
exports.build = build;
{{#browser-sync}}
exports.watch = watch;
{{/browser-sync}}
{{#usingBS}}
exports.default = watch;
{{/usingBS}}
{{^usingBS}}
exports.default = build;
{{/usingBS}}
